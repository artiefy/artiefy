{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Obtenemos el contenido devuelto por OpenAI\nlet text = $json[\"choices\"][0].message.content;\n\n// Eliminamos posibles backticks y espacios extras\ntext = text.replace(/```json|```/g, '').trim();\n\n// Parseamos el string JSON a objeto nativo de n8n\nconst data = JSON.parse(text);\n\n// Retornamos como JSON nativo\nreturn [{ json: data }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [928, -960],
      "id": "1fd13136-f7da-44da-87ae-065104f0d2f5",
      "name": "Parse JSON Response"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f71bd676-9eb3-4da9-beb8-8aab1c8dcdb7",
        "responseMode": "lastNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [-496, -960],
      "id": "1bab53f2-2943-44d7-80d1-30c1b14e26a5",
      "name": "Webhook",
      "webhookId": "0774a7fd-9baf-451c-9812-1484850222a8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/embeddings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "text-embedding-ada-002"
            },
            {
              "name": "input",
              "value": "={{ $json.body.prompt }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-272, -960],
      "id": "e5d99abb-d98c-45b6-aee3-d16d87dabda3",
      "name": "HTTP Embedding1"
    },
    {
      "parameters": {
        "jsCode": "return [{ embedding: items[0].json.data[0].embedding.join(',') }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-48, -960],
      "id": "d3ee9552-f6e3-446d-9891-9e2d1b86875e",
      "name": "Code Embedding1"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, title FROM courses WHERE embedding IS NOT NULL ORDER BY embedding <-> ARRAY[{{ $json.embedding }}]::vector LIMIT 5;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [192, -960],
      "id": "39a61025-d17c-4ef3-8201-f6642d1d45b0",
      "name": "Execute SQL1",
      "credentials": {
        "postgres": {
          "id": "ZPxfjlB8KOBIWOc3",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Array de cursos desde SQL\nconst cursos = items.map(i => ({ id: i.json.id, title: i.json.title }));\n\n// Generamos el prompt para IA\nconst promptText = `Eres un asistente que responde de forma amable y motivadora a un usuario interesado en cursos.\nSolo debes crear:\n1. Un mensaje inicial breve y motivador.\n2. Una pregunta final que invite a seguir conversando.\nNo inventes cursos. Esta es la lista de cursos disponibles (cada uno tiene id y title):\n${JSON.stringify(cursos, null, 2)}\nDevuelve la respuesta en JSON con las siguientes claves:\n- mensaje_inicial\n- cursos (debe ser un array de objetos con id y title, usa exactamente la lista que te doy)\n- pregunta_final\n`;\n\n// Retorna el body para el request a OpenAI\nreturn [\n  {\n    json: {\n      body: JSON.stringify({\n        model: \"gpt-4o-mini\",\n        temperature: 0.9,\n        messages: [\n          { role: \"system\", content: \"Eres un asistente amable que responde en formato JSON.\" },\n          { role: \"user\", content: promptText }\n        ]\n      })\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [432, -960],
      "id": "8a57b88e-865d-4686-af7b-48778a5ea810",
      "name": "Build Prompt for OpenAI"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "specifyHeaders": "=keypair",
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={{ $json[\"body\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [672, -960],
      "id": "59e2482c-0c1a-4cad-9356-9a5ed272a795",
      "name": "OpenAI Chat Completion"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP Embedding1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Embedding1": {
      "main": [
        [
          {
            "node": "Code Embedding1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Embedding1": {
      "main": [
        [
          {
            "node": "Execute SQL1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute SQL1": {
      "main": [
        [
          {
            "node": "Build Prompt for OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Prompt for OpenAI": {
      "main": [
        [
          {
            "node": "OpenAI Chat Completion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Completion": {
      "main": [
        [
          {
            "node": "Parse JSON Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "d0a3ec4f-1145-4f60-a9dc-d3fe518952d9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b32aab7b368c694b22577044a9cea7d6da16d7b16cf7935deb1385e070ce445f"
  },
  "id": "6ci25alDfnUnhzzo",
  "tags": []
}
